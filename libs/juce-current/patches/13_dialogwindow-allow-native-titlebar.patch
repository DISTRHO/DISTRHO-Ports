diff --git a/extras/AudioPluginHost/Source/UI/MainHostWindow.cpp b/extras/AudioPluginHost/Source/UI/MainHostWindow.cpp
index 926753296..7906895e7 100644
--- a/extras/AudioPluginHost/Source/UI/MainHostWindow.cpp
+++ b/extras/AudioPluginHost/Source/UI/MainHostWindow.cpp
@@ -835,7 +835,7 @@ void MainHostWindow::showAudioSettings()
     o.componentToCentreAround       = this;
     o.dialogBackgroundColour        = getLookAndFeel().findColour (ResizableWindow::backgroundColourId);
     o.escapeKeyTriggersCloseButton  = true;
-    o.useNativeTitleBar             = false;
+    o.useNativeTitleBar             = true;
     o.resizable                     = false;
 
      auto* w = o.create();
diff --git a/modules/juce_gui_basics/windows/juce_DialogWindow.cpp b/modules/juce_gui_basics/windows/juce_DialogWindow.cpp
index eed3b6dbf..007047557 100644
--- a/modules/juce_gui_basics/windows/juce_DialogWindow.cpp
+++ b/modules/juce_gui_basics/windows/juce_DialogWindow.cpp
@@ -127,7 +127,8 @@ void DialogWindow::showDialog (const String& dialogTitle,
                                Colour backgroundColour,
                                const bool escapeKeyTriggersCloseButton,
                                const bool resizable,
-                               const bool useBottomRightCornerResizer)
+                               const bool useBottomRightCornerResizer,
+                               const bool useNativeTitleBar)
 {
     LaunchOptions o;
     o.dialogTitle = dialogTitle;
@@ -135,9 +136,9 @@ void DialogWindow::showDialog (const String& dialogTitle,
     o.componentToCentreAround = componentToCentreAround;
     o.dialogBackgroundColour = backgroundColour;
     o.escapeKeyTriggersCloseButton = escapeKeyTriggersCloseButton;
-    o.useNativeTitleBar = false;
     o.resizable = resizable;
     o.useBottomRightCornerResizer = useBottomRightCornerResizer;
+    o.useNativeTitleBar = useNativeTitleBar;
 
     o.launchAsync();
 }
@@ -149,7 +150,8 @@ int DialogWindow::showModalDialog (const String& dialogTitle,
                                    Colour backgroundColour,
                                    const bool escapeKeyTriggersCloseButton,
                                    const bool resizable,
-                                   const bool useBottomRightCornerResizer)
+                                   const bool useBottomRightCornerResizer,
+                                   const bool useNativeTitleBar)
 {
     LaunchOptions o;
     o.dialogTitle = dialogTitle;
@@ -157,9 +159,9 @@ int DialogWindow::showModalDialog (const String& dialogTitle,
     o.componentToCentreAround = componentToCentreAround;
     o.dialogBackgroundColour = backgroundColour;
     o.escapeKeyTriggersCloseButton = escapeKeyTriggersCloseButton;
-    o.useNativeTitleBar = false;
     o.resizable = resizable;
     o.useBottomRightCornerResizer = useBottomRightCornerResizer;
+    o.useNativeTitleBar = useNativeTitleBar;
 
     return o.runModal();
 }
diff --git a/modules/juce_gui_basics/windows/juce_DialogWindow.h b/modules/juce_gui_basics/windows/juce_DialogWindow.h
index 0a343619f..8f01f421d 100644
--- a/modules/juce_gui_basics/windows/juce_DialogWindow.h
+++ b/modules/juce_gui_basics/windows/juce_DialogWindow.h
@@ -192,7 +192,8 @@ public:
                             Colour backgroundColour,
                             bool escapeKeyTriggersCloseButton,
                             bool shouldBeResizable = false,
-                            bool useBottomRightCornerResizer = false);
+                            bool useBottomRightCornerResizer = false,
+                            bool useNativeTitleBar = true);
 
    #if JUCE_MODAL_LOOPS_PERMITTED
     /** Easy way of quickly showing a dialog box containing a given component.
@@ -238,7 +239,8 @@ public:
                                 Colour backgroundColour,
                                 bool escapeKeyTriggersCloseButton,
                                 bool shouldBeResizable = false,
-                                bool useBottomRightCornerResizer = false);
+                                bool useBottomRightCornerResizer = false,
+                                bool useNativeTitleBar = true);
    #endif
 
 
diff --git a/modules/juce_gui_basics/windows/juce_TopLevelWindow.h b/modules/juce_gui_basics/windows/juce_TopLevelWindow.h
index 75620cb01..89c9477bb 100644
--- a/modules/juce_gui_basics/windows/juce_TopLevelWindow.h
+++ b/modules/juce_gui_basics/windows/juce_TopLevelWindow.h
@@ -147,7 +147,7 @@ protected:
 private:
     friend class TopLevelWindowManager;
     friend class ResizableWindow;
-    bool useDropShadow = true, useNativeTitleBar = false, isCurrentlyActive = false;
+    bool useDropShadow = true, useNativeTitleBar = true, isCurrentlyActive = false;
     std::unique_ptr<DropShadower> shadower;
 
     std::unique_ptr<AccessibilityHandler> createAccessibilityHandler() override;
diff --git a/modules/juce_gui_extra/misc/juce_PreferencesPanel.cpp b/modules/juce_gui_extra/misc/juce_PreferencesPanel.cpp
index e94c544b5..70b70d386 100644
--- a/modules/juce_gui_extra/misc/juce_PreferencesPanel.cpp
+++ b/modules/juce_gui_extra/misc/juce_PreferencesPanel.cpp
@@ -85,7 +85,7 @@ void PreferencesPanel::showInDialogBox (const String& dialogTitle, int dialogWid
     o.dialogTitle                   = dialogTitle;
     o.dialogBackgroundColour        = backgroundColour;
     o.escapeKeyTriggersCloseButton  = false;
-    o.useNativeTitleBar             = false;
+    o.useNativeTitleBar             = true;
     o.resizable                     = false;
 
     o.launchAsync();
