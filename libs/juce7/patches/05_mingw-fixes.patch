diff --git a/modules/juce_audio_plugin_client/VST/juce_VST_Wrapper.cpp b/modules/juce_audio_plugin_client/VST/juce_VST_Wrapper.cpp
index 3fcb6f54a..dd044d108 100644
--- a/modules/juce_audio_plugin_client/VST/juce_VST_Wrapper.cpp
+++ b/modules/juce_audio_plugin_client/VST/juce_VST_Wrapper.cpp
@@ -61,7 +61,7 @@ JUCE_BEGIN_IGNORE_WARNINGS_MSVC (4996 4100)
  #define PRAGMA_ALIGN_SUPPORTED 1
 #endif
 
-#if ! JUCE_MSVC
+#if ! JUCE_WINDOWS
  #define __cdecl
 #endif
 
diff --git a/modules/juce_audio_processors/format_types/juce_VSTPluginFormat.cpp b/modules/juce_audio_processors/format_types/juce_VSTPluginFormat.cpp
index f3a3ba2f8..7336fff7d 100644
--- a/modules/juce_audio_processors/format_types/juce_VSTPluginFormat.cpp
+++ b/modules/juce_audio_processors/format_types/juce_VSTPluginFormat.cpp
@@ -57,9 +57,6 @@ JUCE_BEGIN_IGNORE_WARNINGS_MSVC (4355)
  #ifndef WM_APPCOMMAND
   #define WM_APPCOMMAND 0x0319
  #endif
-
- extern "C" void _fpreset();
- extern "C" void _clearfp();
 #elif ! JUCE_WINDOWS
  static void _fpreset() {}
  static void _clearfp() {}
diff --git a/modules/juce_gui_basics/juce_gui_basics.cpp b/modules/juce_gui_basics/juce_gui_basics.cpp
index 6755bba64..3ebe35f2b 100644
--- a/modules/juce_gui_basics/juce_gui_basics.cpp
+++ b/modules/juce_gui_basics/juce_gui_basics.cpp
@@ -67,10 +67,13 @@
  #include <vfw.h>
  #include <commdlg.h>
  #include <commctrl.h>
- #include <UIAutomation.h>
  #include <sapi.h>
  #include <Dxgi.h>
 
+ #if JUCE_MSVC
+  #include <UIAutomation.h>
+ #endif
+
  #if JUCE_WEB_BROWSER
   #include <exdisp.h>
   #include <exdispid.h>
@@ -287,13 +290,15 @@ namespace juce
  #include "native/juce_mac_MouseCursor.mm"
 
 #elif JUCE_WINDOWS
- #include "native/accessibility/juce_win32_ComInterfaces.h"
- #include "native/accessibility/juce_win32_WindowsUIAWrapper.h"
- #include "native/accessibility/juce_win32_AccessibilityElement.h"
- #include "native/accessibility/juce_win32_UIAHelpers.h"
- #include "native/accessibility/juce_win32_UIAProviders.h"
- #include "native/accessibility/juce_win32_AccessibilityElement.cpp"
- #include "native/accessibility/juce_win32_Accessibility.cpp"
+ #if JUCE_MSVC
+  #include "native/accessibility/juce_win32_ComInterfaces.h"
+  #include "native/accessibility/juce_win32_WindowsUIAWrapper.h"
+  #include "native/accessibility/juce_win32_AccessibilityElement.h"
+  #include "native/accessibility/juce_win32_UIAHelpers.h"
+  #include "native/accessibility/juce_win32_UIAProviders.h"
+  #include "native/accessibility/juce_win32_AccessibilityElement.cpp"
+  #include "native/accessibility/juce_win32_Accessibility.cpp"
+ #endif
  #include "native/juce_win32_Windowing.cpp"
  #include "native/juce_win32_DragAndDrop.cpp"
  #include "native/juce_win32_FileChooser.cpp"
diff --git a/modules/juce_gui_basics/native/juce_win32_Windowing.cpp b/modules/juce_gui_basics/native/juce_win32_Windowing.cpp
index cb247722a..7a012c39c 100644
--- a/modules/juce_gui_basics/native/juce_win32_Windowing.cpp
+++ b/modules/juce_gui_basics/native/juce_win32_Windowing.cpp
@@ -1667,8 +1667,10 @@ public:
         // do this first to avoid messages arriving for this window before it's destroyed
         JuceWindowIdentifier::setAsJUCEWindow (hwnd, false);
 
+       #if JUCE_MSVC
         if (isAccessibilityActive)
             WindowsAccessibility::revokeUIAMapEntriesForWindow (hwnd);
+       #endif
 
         shadower = nullptr;
         currentTouches.deleteAllTouchesForPeer (this);
@@ -4246,6 +4248,7 @@ private:
             case WM_GETDLGCODE:
                 return DLGC_WANTALLKEYS;
 
+           #if JUCE_MSVC
             case WM_GETOBJECT:
             {
                 if (static_cast<long> (lParam) == WindowsAccessibility::getUiaRootObjectId())
@@ -4264,6 +4267,7 @@ private:
 
                 break;
             }
+           #endif
             default:
                 break;
         }
